{"ast":null,"code":"import _classCallCheck from\"D:/dev/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"D:/dev/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";var MainApi=/*#__PURE__*/function(){function MainApi(_ref){var baseUrl=_ref.baseUrl,baseUrlMovies=_ref.baseUrlMovies,headers=_ref.headers,credentials=_ref.credentials;_classCallCheck(this,MainApi);this.baseUrl=baseUrl;this.baseUrlMovies=baseUrlMovies;this.headers=headers;this.credentials=credentials;}_createClass(MainApi,[{key:\"_getResponseData\",value:function _getResponseData(res){if(!res.ok){return Promise.reject(res.status);}return res.json();}// Запрос массив фильмов\n},{key:\"getInitialMovies\",value:function getInitialMovies(){var _this=this;return fetch(this.baseUrl+\"/movies\",{headers:this.headers,credentials:this.credentials}).then(function(res){return _this._getResponseData(res);});}// Другие методы работы с API\n},{key:\"getInitialUsers\",value:function getInitialUsers(){var _this2=this;return fetch(this.baseUrl+\"/users/me\",{headers:this.headers,credentials:this.credentials}).then(function(res){return _this2._getResponseData(res);});}// Отправляем данные пользователя на авторизацию \n},{key:\"setAuthorizeUser\",value:function setAuthorizeUser(email,password){var _this3=this;return fetch(this.baseUrl+\"/signin\",{method:\"POST\",headers:this.headers,credentials:this.credentials,body:JSON.stringify({email:email,password:password})}).then(function(res){return _this3._getResponseData(res);}).then(function(data){return data;});}// Регестрируем нового пользователя\n},{key:\"setRegisterUser\",value:function setRegisterUser(name,email,password){var _this4=this;return fetch(this.baseUrl+\"/signup\",{method:\"POST\",headers:this.headers,credentials:this.credentials,body:JSON.stringify({name:name,email:email,password:password})}).then(function(res){return _this4._getResponseData(res);}).then(function(data){return data;});}// Проверяем JWT пользователя \n},{key:\"getAuthenticationUser\",value:function getAuthenticationUser(){var _this5=this;return fetch(this.baseUrl+\"/users/me\",{method:\"GET\",credentials:this.credentials,headers:{'Content-Type':'application/json'}}).then(function(res){return _this5._getResponseData(res);});}},{key:\"getLogout\",value:function getLogout(){var _this6=this;return fetch(this.baseUrl+\"/signout\",{method:'POST',headers:this._headers,credentials:this.credentials}).then(function(res){return _this6._getResponseData(res);});}},{key:\"setInitialUsers\",value:function setInitialUsers(name,email){var _this7=this;return fetch(this.baseUrl+\"/users/me\",{method:\"PATCH\",headers:this.headers,credentials:this.credentials,body:JSON.stringify({name:name,email:email})}).then(function(res){return _this7._getResponseData(res);});}},{key:\"setAddNewMovies\",value:function setAddNewMovies(dataMovies){var _this8=this;return fetch(this.baseUrl+\"/movies\",{method:\"POST\",headers:this.headers,credentials:this.credentials,body:JSON.stringify({country:dataMovies.country,director:dataMovies.director,duration:dataMovies.duration,year:dataMovies.year,description:dataMovies.description,image:this.baseUrlMovies+dataMovies.image.url,trailerLink:dataMovies.trailerLink,nameRU:dataMovies.nameRU,nameEN:dataMovies.nameEN,thumbnail:this.baseUrlMovies+dataMovies.image.url,movieId:dataMovies.id})}).then(function(res){return _this8._getResponseData(res);});}},{key:\"deleteMovies\",value:function deleteMovies(movieId){var _this9=this;return fetch(this.baseUrl+\"/movies/\"+movieId,{method:\"DELETE\",headers:this.headers,credentials:this.credentials}).then(function(res){return _this9._getResponseData(res);});}}]);return MainApi;}();// Делаем запрос по api для получения информации\nvar apiMain=new MainApi({baseUrl:\"https://api.golosnoy.nomoredomainsrocks.ru:3000\",// baseUrl: \"http://localhost:3001\",\nbaseUrlMovies:'https://api.nomoreparties.co',credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}});export default apiMain;","map":{"version":3,"names":["MainApi","_ref","baseUrl","baseUrlMovies","headers","credentials","_classCallCheck","_createClass","key","value","_getResponseData","res","ok","Promise","reject","status","json","getInitialMovies","_this","fetch","then","getInitialUsers","_this2","setAuthorizeUser","email","password","_this3","method","body","JSON","stringify","data","setRegisterUser","name","_this4","getAuthenticationUser","_this5","getLogout","_this6","_headers","setInitialUsers","_this7","setAddNewMovies","dataMovies","_this8","country","director","duration","year","description","image","url","trailerLink","nameRU","nameEN","thumbnail","movieId","id","deleteMovies","_this9","apiMain"],"sources":["D:/dev/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["class MainApi {\r\n    constructor({ baseUrl, baseUrlMovies, headers, credentials }) {\r\n        this.baseUrl = baseUrl;\r\n        this.baseUrlMovies = baseUrlMovies;\r\n        this.headers = headers;\r\n        this.credentials = credentials;\r\n    }\r\n\r\n    _getResponseData(res) {\r\n        if (!res.ok) {\r\n            return Promise.reject(res.status);\r\n        }\r\n        return res.json();\r\n    }\r\n\r\n    // Запрос массив фильмов\r\n    getInitialMovies() {\r\n        return fetch(this.baseUrl + \"/movies\", {\r\n            headers: this.headers,\r\n            credentials: this.credentials,\r\n        }).then((res) => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n\r\n    // Другие методы работы с API\r\n    getInitialUsers() {\r\n        return fetch(this.baseUrl + \"/users/me\", {\r\n            headers: this.headers,\r\n            credentials: this.credentials,\r\n        }).then((res) => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n\r\n    // Отправляем данные пользователя на авторизацию \r\n    setAuthorizeUser(email, password) {\r\n        return fetch(this.baseUrl + \"/signin\", {\r\n            method: \"POST\",\r\n            headers: this.headers,\r\n            credentials: this.credentials,\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n            }),\r\n        })\r\n            .then((res) => {\r\n                return this._getResponseData(res);\r\n            })\r\n            .then((data) => {\r\n                return data;\r\n            });\r\n    }\r\n\r\n    // Регестрируем нового пользователя\r\n    setRegisterUser(name, email, password) {\r\n        return fetch(this.baseUrl + \"/signup\", {\r\n            method: \"POST\",\r\n            headers: this.headers,\r\n            credentials: this.credentials,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                email: email,\r\n                password: password,\r\n            }),\r\n        })\r\n            .then((res) => {\r\n                return this._getResponseData(res);\r\n            })\r\n            .then((data) => {\r\n                return data;\r\n            });\r\n    }\r\n\r\n    // Проверяем JWT пользователя \r\n    getAuthenticationUser() {\r\n        return fetch(this.baseUrl + \"/users/me\", {\r\n            method: \"GET\",\r\n            credentials: this.credentials,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then((res) => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n\r\n    getLogout() {\r\n        return fetch(this.baseUrl + \"/signout\", {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            credentials: this.credentials,\r\n        })\r\n            .then((res) => {\r\n                return this._getResponseData(res);\r\n            })\r\n    }\r\n\r\n    setInitialUsers(name, email) {\r\n        return fetch(this.baseUrl + \"/users/me\", {\r\n            method: \"PATCH\",\r\n            headers: this.headers,\r\n            credentials: this.credentials,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                email: email,\r\n            }),\r\n        }).then((res) => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n\r\n    setAddNewMovies(dataMovies) {\r\n\r\n        return fetch(this.baseUrl + \"/movies\", {\r\n            method: \"POST\",\r\n            headers: this.headers,\r\n            credentials: this.credentials,\r\n            body: JSON.stringify({\r\n                country: dataMovies.country,\r\n                director: dataMovies.director,\r\n                duration: dataMovies.duration,\r\n                year: dataMovies.year,\r\n                description: dataMovies.description,\r\n                image: this.baseUrlMovies + dataMovies.image.url,\r\n                trailerLink: dataMovies.trailerLink,\r\n                nameRU: dataMovies.nameRU,\r\n                nameEN: dataMovies.nameEN,\r\n                thumbnail: this.baseUrlMovies + dataMovies.image.url,\r\n                movieId: dataMovies.id\r\n            }),\r\n        }).then((res) => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n\r\n    deleteMovies(movieId) {\r\n        return fetch(this.baseUrl + \"/movies/\" + movieId, {\r\n            method: \"DELETE\",\r\n            headers: this.headers,\r\n            credentials: this.credentials,\r\n        }).then((res) => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n// Делаем запрос по api для получения информации\r\nconst apiMain = new MainApi({\r\n    baseUrl: \"https://api.golosnoy.nomoredomainsrocks.ru:3000\",\r\n    // baseUrl: \"http://localhost:3001\",\r\n    baseUrlMovies: 'https://api.nomoreparties.co',\r\n    credentials: \"include\",\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n});\r\n\r\nexport default apiMain;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}